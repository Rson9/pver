name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v0.0.2)'
        required: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.setvars.outputs.version }}
      short_version: ${{ steps.setvars.outputs.short_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set version variables
        id: setvars
        run: |
          VERSION="${{ github.event.inputs.version }}"
          SHORT_VER="${VERSION#v}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "short_version=${SHORT_VER}" >> $GITHUB_OUTPUT

      - name: Tag version
        run: |
          git tag -a ${{ steps.setvars.outputs.version }} -m "Release ${{ steps.setvars.outputs.version }}"
          git push origin ${{ steps.setvars.outputs.version }}

  build-and-release:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout tagged release
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.prepare.outputs.version }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build
        run: |
          output_name=pver
          [ "${{ matrix.goos }}" = "windows" ] && output_name=pver.exe
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o $output_name main.go

      - name: Archive binary
        id: archive
        run: |
          archive="pver_${{ matrix.goos }}_${{ matrix.goarch }}_${{ needs.prepare.outputs.version }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip -r ${archive}.zip pver.exe
            echo "archive_file=${archive}.zip" >> $GITHUB_OUTPUT
          else
            tar czf ${archive}.tar.gz pver
            echo "archive_file=${archive}.tar.gz" >> $GITHUB_OUTPUT
          fi

      - name: Upload binary
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.archive.outputs.archive_file }}
          tag_name: ${{ needs.prepare.outputs.version }}
          body: |
            ⚠️ **请勿下载上方自动生成的 Source code (zip/tar.gz) 包！**
            官方二进制包请见下方文件。如需源码请 clone 仓库。
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
